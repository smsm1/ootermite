diff -r --unified -N buildbot-0.7.8-orig/buildbot/changes/bonsaipoller.py buildbot-0.7.8-patch/buildbot/changes/bonsaipoller.py
--- buildbot-0.7.8-orig/buildbot/changes/bonsaipoller.py	2008-07-25 01:36:24.000000000 +0200
+++ buildbot-0.7.8-patch/buildbot/changes/bonsaipoller.py	2008-08-18 16:55:07.000000000 +0200
@@ -48,7 +48,7 @@
         return 0
 
 class CiNode:
-    """I hold information baout one <ci> node, including a list of files"""
+    """I hold information about one <ci> node, including a list of files"""
     def __init__(self, log="", who="", date=0, files=[]):
         self.log = log
         self.who = who
diff -r --unified -N buildbot-0.7.8-orig/buildbot/process/base.py buildbot-0.7.8-patch/buildbot/process/base.py
--- buildbot-0.7.8-orig/buildbot/process/base.py	2008-07-25 01:36:28.000000000 +0200
+++ buildbot-0.7.8-patch/buildbot/process/base.py	2008-08-20 10:08:07.000000000 +0200
@@ -70,6 +70,22 @@
         self.start_watchers = []
         self.finish_watchers = []
         self.status = BuildRequestStatus(source, builderName)
+    
+    # This method is necessary to remove equal builds from the
+    # queue.
+    def __eq__(self, other):
+        # properties contains our custom build properties (e.g. languages and install_set)
+        # The branch and revision must be obtained through the SourceStamp
+        #if canBeMergedWith(other):
+        #    # Compare the custom build properties
+        #    for key in self.properties.keys():
+        #        value = self.properties[key]
+        #        if not other.properties.hasKey(key) and other.properties[key] != value:
+        #            return False
+        #    return True
+        #else:
+        #    return False
+        return self.canBeMergedWith(other)
 
     def canBeMergedWith(self, other):
         return self.source.canBeMergedWith(other.source)
diff -r --unified -N buildbot-0.7.8-orig/buildbot/process/builder.py buildbot-0.7.8-patch/buildbot/process/builder.py
--- buildbot-0.7.8-orig/buildbot/process/builder.py	2008-07-25 01:36:28.000000000 +0200
+++ buildbot-0.7.8-patch/buildbot/process/builder.py	2008-09-04 13:30:45.000000000 +0200
@@ -333,13 +333,33 @@
     def __repr__(self):
         return "<Builder '%s' at %d>" % (self.name, id(self))
 
-
+    # Is this the method to cancel double queued builds?
     def submitBuildRequest(self, req):
+        for breq in self.buildable:
+            if breq == req:
+                # Check if install_set is on and languages equal
+                # This is an ugly hack!!!
+                if req.properties.has_key('install_set') and breq.properties.has_key('install_set') and \
+                    req.properties.has_key('languages') and breq.properties.has_key('languages'):
+                    if breq.properties['languages'] == req.properties['languages'] and \
+                        breq.properties['install_set'] == req.properties['install_set']:
+                        print "DEBUG: Build %s skipped!" % req
+                        return
+                    else:
+                        # Enable install_set
+                        breq.properties['install_set'] = 'on' 
+                        print "DEBUG: Build %s merged!" % req
+                        return                  
+                else:
+                    print "DEBUG: Build %s skipped!" % req
+                    return
+        
         req.submittedAt = now()
         self.buildable.append(req)
         req.requestSubmitted(self)
         self.builder_status.addBuildRequest(req.status)
         self.maybeStartBuild()
+        return
 
     def cancelBuildRequest(self, req):
         if req in self.buildable:
@@ -714,12 +734,18 @@
             return
 
         ss = bs.getSourceStamp(absolute=True)
-        req = base.BuildRequest(reason, ss, self.original.name)
+        # The properties need to be passed again
+        log.msg("Resubmit build #%s" % bs.getNumber())
+        log.msg("Resubmit build %s" % bs.getProperties())
+        req = base.BuildRequest(reason, ss, self.original.name, bs.getProperties())
         self.requestBuild(req)
 
     def getPendingBuilds(self):
-        # return IBuildRequestControl objects
-        raise NotImplementedError
+        """Return a list of L{IBuildRequestControl} objects for this Builder.
+        Each one corresponds to a pending build that has not yet started (due
+        to a scarcity of build slaves). These upcoming builds can be canceled
+        through the control object."""
+        return self.original.buildable
 
     def getBuild(self, number):
         return self.original.getBuild(number)
diff -r --unified -N buildbot-0.7.8-orig/buildbot/process/factory.py buildbot-0.7.8-patch/buildbot/process/factory.py
--- buildbot-0.7.8-orig/buildbot/process/factory.py	2008-07-25 01:36:28.000000000 +0200
+++ buildbot-0.7.8-patch/buildbot/process/factory.py	2008-08-20 15:05:27.000000000 +0200
@@ -51,10 +51,10 @@
 # BuildFactory subclasses for common build tools
 
 class GNUAutoconf(BuildFactory):
-    def __init__(self, source, configure="./configure",
-                 configureEnv={},
-                 configureFlags=[],
-                 compile=["make", "all"],
+    def __init__(self, source, configure="./configure", 
+                 configureEnv={}, 
+                 configureFlags=[], 
+                 compile=["make", "all"], 
                  test=["make", "check"]):
         BuildFactory.__init__(self, [source])
         if configure is not None:
@@ -105,10 +105,10 @@
     randomly = False
     recurse = False
 
-    def __init__(self, source,
-                 buildpython=["python"], trialpython=[], trial=None,
-                 testpath=".", randomly=None, recurse=None,
-                 tests=None,  useTestCaseNames=False, env=None):
+    def __init__(self, source, 
+                 buildpython=["python"], trialpython=[], trial=None, 
+                 testpath=".", randomly=None, recurse=None, 
+                 tests=None, useTestCaseNames=False, env=None):
         BuildFactory.__init__(self, [source])
         assert tests or useTestCaseNames, "must use one or the other"
         if trial is not None:
@@ -121,13 +121,13 @@
         from buildbot.steps.python_twisted import Trial
         buildcommand = buildpython + ["./setup.py", "build"]
         self.addStep(Compile, command=buildcommand, env=env)
-        self.addStep(Trial,
-                     python=trialpython, trial=self.trial,
-                     testpath=testpath,
-                     tests=tests, testChanges=useTestCaseNames,
-                     randomly=self.randomly,
-                     recurse=self.recurse,
-                     env=env,
+        self.addStep(Trial, 
+                     python=trialpython, trial=self.trial, 
+                     testpath=testpath, 
+                     tests=tests, testChanges=useTestCaseNames, 
+                     randomly=self.randomly, 
+                     recurse=self.recurse, 
+                     env=env, 
                      )
 
 
@@ -140,41 +140,41 @@
 class BasicBuildFactory(GNUAutoconf):
     # really a "GNU Autoconf-created tarball -in-CVS tree" builder
 
-    def __init__(self, cvsroot, cvsmodule,
-                 configure=None, configureEnv={},
-                 compile="make all",
+    def __init__(self, cvsroot, cvsmodule, 
+                 configure=None, configureEnv={}, 
+                 compile="make all", 
                  test="make check", cvsCopy=False):
         mode = "clobber"
         if cvsCopy:
             mode = "copy"
         source = s(CVS, cvsroot=cvsroot, cvsmodule=cvsmodule, mode=mode)
-        GNUAutoconf.__init__(self, source,
-                             configure=configure, configureEnv=configureEnv,
-                             compile=compile,
+        GNUAutoconf.__init__(self, source, 
+                             configure=configure, configureEnv=configureEnv, 
+                             compile=compile, 
                              test=test)
 
 class QuickBuildFactory(BasicBuildFactory):
     useProgress = False
 
-    def __init__(self, cvsroot, cvsmodule,
-                 configure=None, configureEnv={},
-                 compile="make all",
+    def __init__(self, cvsroot, cvsmodule, 
+                 configure=None, configureEnv={}, 
+                 compile="make all", 
                  test="make check", cvsCopy=False):
         mode = "update"
         source = s(CVS, cvsroot=cvsroot, cvsmodule=cvsmodule, mode=mode)
-        GNUAutoconf.__init__(self, source,
-                             configure=configure, configureEnv=configureEnv,
-                             compile=compile,
+        GNUAutoconf.__init__(self, source, 
+                             configure=configure, configureEnv=configureEnv, 
+                             compile=compile, 
                              test=test)
 
 class BasicSVN(GNUAutoconf):
 
-    def __init__(self, svnurl,
-                 configure=None, configureEnv={},
-                 compile="make all",
+    def __init__(self, svnurl, 
+                 configure=None, configureEnv={}, 
+                 compile="make all", 
                  test="make check"):
         source = s(SVN, svnurl=svnurl, mode="update")
-        GNUAutoconf.__init__(self, source,
-                             configure=configure, configureEnv=configureEnv,
-                             compile=compile,
+        GNUAutoconf.__init__(self, source, 
+                             configure=configure, configureEnv=configureEnv, 
+                             compile=compile, 
                              test=test)
diff -r --unified -N buildbot-0.7.8-orig/buildbot/process/properties.py buildbot-0.7.8-patch/buildbot/process/properties.py
--- buildbot-0.7.8-orig/buildbot/process/properties.py	2008-07-25 01:36:29.000000000 +0200
+++ buildbot-0.7.8-patch/buildbot/process/properties.py	2008-08-20 11:34:15.000000000 +0200
@@ -39,8 +39,13 @@
 
     def __getitem__(self, name):
         """Just get the value for this property."""
-        rv = self.properties[name][0]
-        return rv
+        if self.has_key(name):
+            return self.properties[name][0]
+        else:
+            return None
+        
+    def __setitem__(self, key, value):
+        self.properties[key] = (value, "Merged")
 
     def has_key(self, name):
         return self.properties.has_key(name)
diff -r --unified -N buildbot-0.7.8-orig/buildbot/status/web/about.py buildbot-0.7.8-patch/buildbot/status/web/about.py
--- buildbot-0.7.8-orig/buildbot/status/web/about.py	2008-07-25 01:36:19.000000000 +0200
+++ buildbot-0.7.8-patch/buildbot/status/web/about.py	2008-08-18 16:55:05.000000000 +0200
@@ -5,6 +5,8 @@
 import twisted
 import sys
 
+from ootermite import *
+
 class AboutBuildbot(HtmlResource):
     title = "About this Buildbot"
 
@@ -19,6 +21,10 @@
         data += ' <li>Buildmaster platform: %s</li>\n' % html.escape(sys.platform)
         data += '</ul>\n'
 
+        # Add customizer version information
+        data += '<h2>Customizer</h2>'
+        data += '%s %s\n' % (html.escape(ootermite.name), html.escape(ootermite.version))
+
         data += '''
 <h2>Source code</h2>
 
diff -r --unified -N buildbot-0.7.8-orig/buildbot/status/web/base.py buildbot-0.7.8-patch/buildbot/status/web/base.py
--- buildbot-0.7.8-orig/buildbot/status/web/base.py	2008-07-25 01:36:25.000000000 +0200
+++ buildbot-0.7.8-patch/buildbot/status/web/base.py	2008-08-29 15:20:54.000000000 +0200
@@ -83,10 +83,14 @@
                  "<input type='text' name='username' />")
       + make_row("Reason for build:",
                  "<input type='text' name='comments' />")
-      + make_row("Branch to build:",
+      + make_row("CWS/MWS to build:",
                  "<input type='text' name='branch' />")
-      + make_row("Revision to build:",
-                 "<input type='text' name='revision' />")
+      #+ make_row("Revision to build:",
+      #           "<input type='text' name='revision' />")
+      + make_row("Install Set?:",
+                 "<input type='checkbox' name='install_set' />")
+      + make_row("Additional languages:",
+                 "<input type='text' name='languages' />")
       + '<input type="submit" value="Force Build" /></form>\n')
 
 colormap = {
diff -r --unified -N buildbot-0.7.8-orig/buildbot/status/web/baseweb.py buildbot-0.7.8-patch/buildbot/status/web/baseweb.py
--- buildbot-0.7.8-orig/buildbot/status/web/baseweb.py	2008-07-25 01:36:25.000000000 +0200
+++ buildbot-0.7.8-patch/buildbot/status/web/baseweb.py	2008-09-04 11:52:38.000000000 +0200
@@ -20,6 +20,7 @@
 from buildbot.status.web.slaves import BuildSlavesResource
 from buildbot.status.web.xmlrpc import XMLRPCServer
 from buildbot.status.web.about import AboutBuildbot
+from buildbot.status.web.queue import QueueStatusResource
 
 # this class contains the status services (WebStatus and the older Waterfall)
 # which can be put in c['status']. It also contains some of the resources
diff -r --unified -N buildbot-0.7.8-orig/buildbot/status/web/builder.py buildbot-0.7.8-patch/buildbot/status/web/builder.py
--- buildbot-0.7.8-orig/buildbot/status/web/builder.py	2008-07-25 01:36:28.000000000 +0200
+++ buildbot-0.7.8-patch/buildbot/status/web/builder.py	2008-09-04 13:00:32.000000000 +0200
@@ -9,6 +9,7 @@
 from buildbot.status.web.base import HtmlResource, make_row, \
      make_force_build_form, OneLineMixin
 from buildbot.process.base import BuildRequest
+from buildbot.process.properties import Properties
 from buildbot.sourcestamp import SourceStamp
 from buildbot import version, util
 
@@ -50,6 +51,14 @@
   <input type="submit" value="Stop Build" />
 </form>''' % stopURL
         return data
+    
+    def makeRemoveFromQueueButton(self, req, buildnum):
+        stopURL = urllib.quote(req.childLink("builds/%d/remove" % buildnum))
+        data = '''
+<form action="%s" class="command stopbuild" style="display:inline">
+  <input type="submit" value="Remove Build" />
+</form>''' % stopURL
+        return data
 
     def body(self, req):
         b = self.builder_status
@@ -76,6 +85,28 @@
             data += "</ul>\n"
         else:
             data += "<h2>no current builds</h2>\n"
+            
+        # Then a section with the queued build requests
+        data += "<h2>Pending Builds:</h2>\n"
+        # Retrieve the builders queue
+        pendingBuilds = b.getPendingBuilds()
+        if pendingBuilds:
+            # Determine the build numbers of the queue builds.
+            # Sadly we cannot remove the build from the queue with this
+            # number as it is not valid yet.
+            nextBuildNumber = b.nextBuildNumber
+            data += "<ul>\n"
+            for buildRequestStatus in pendingBuilds:
+                sourceStamp = buildRequestStatus.getSourceStamp()
+                data += "<li>#%u " % nextBuildNumber
+                data += "Branch: %s " % sourceStamp.branch
+                data += "[rev=%s]" % sourceStamp.revision
+                data += self.makeRemoveFromQueueButton(req, nextBuildNumber)
+                data += "</li>"
+                nextBuildNumber += 1
+            data += "</ul>\n"
+        else:
+            data += "No pending builds"
 
         # Then a section with the last 5 builds, with the most recent build
         # distinguished from the rest.
@@ -190,11 +221,18 @@
         if not revision:
             revision = None
 
+        install_set = req.args.get("install_set", [""])[0]
+        languages   = req.args.get("languages", [""])[0]
+
+        customBuildProps = Properties()
+        customBuildProps.setProperty("install_set", install_set, "")
+        customBuildProps.setProperty("languages", languages, "")
+
         # TODO: if we can authenticate that a particular User pushed the
         # button, use their name instead of None, so they'll be informed of
         # the results.
         s = SourceStamp(branch=branch, revision=revision)
-        req = BuildRequest(r, s, builderName=self.builder_status.getName())
+        req = BuildRequest(r, s, builderName=self.builder_status.getName(), properties=customBuildProps)
         try:
             self.builder_control.requestBuildSoon(req)
         except interfaces.NoSlaveError:
diff -r --unified -N buildbot-0.7.8-orig/buildbot/status/web/build.py buildbot-0.7.8-patch/buildbot/status/web/build.py
--- buildbot-0.7.8-orig/buildbot/status/web/build.py	2008-07-25 01:36:29.000000000 +0200
+++ buildbot-0.7.8-patch/buildbot/status/web/build.py	2008-09-04 13:27:58.000000000 +0200
@@ -11,6 +11,7 @@
 from buildbot.status.web.tests import TestsResource
 from buildbot.status.web.step import StepsResource
 from buildbot import version, util
+from buildbot.status.web.queue import QueueStatusResource
 
 # /builders/$builder/builds/$buildnum
 class StatusResourceBuild(HtmlResource):
@@ -56,8 +57,8 @@
             results = b.getResults()
             data += "<h2>Results:</h2>\n"
             text = " ".join(b.getText())
-            data += '<span class="%s">%s</span>\n' % (css_classes[results],
-                                                      text)
+            if results != None:
+                data += '<span class="%s">%s</span>\n' % (css_classes[results], text)
             if b.getTestResults():
                 url = req.childLink("tests")
                 data += "<h3><a href=\"%s\">test results</a></h3>\n" % url
@@ -284,6 +285,9 @@
                     build_control = None
                 return StatusResourceBuild(build_status, build_control,
                                            self.builder_control)
+            else:
+                # Probably a build that was not started yet
+                return QueueStatusResource(path, req, num, self.builder_status, self.builder_control)
 
         return HtmlResource.getChild(self, path, req)
 
diff -r --unified -N buildbot-0.7.8-orig/buildbot/status/web/queue.py buildbot-0.7.8-patch/buildbot/status/web/queue.py
--- buildbot-0.7.8-orig/buildbot/status/web/queue.py	1970-01-01 01:00:00.000000000 +0100
+++ buildbot-0.7.8-patch/buildbot/status/web/queue.py	2008-09-04 13:29:38.000000000 +0200
@@ -0,0 +1,39 @@
+from twisted.web.util import Redirect, DeferredResource
+from twisted.internet import defer, reactor
+from buildbot.status.web.base import HtmlResource
+
+# Shows the queue of a Builder
+class QueueStatusResource(HtmlResource):
+    def __init__(self, path, req, num, builder_status, builder_control):
+        HtmlResource.__init__(self)
+        self.path = path
+        self.req  = req
+        self.num  = num
+        self.builder_status = builder_status
+        self.builder_control = builder_control
+        
+    def body(self, request):    
+        return ""
+    
+    # Removes a build from a builders queue
+    def removeFromQueue(self, req):
+        # Delete the build request from queue
+        idx = self.builder_status.nextBuildNumber - self.num
+        
+        if idx >= 0:
+            buildables = self.builder_control.getPendingBuilds()
+            buildables[idx].cancel()
+
+        # we're at http://localhost:8080/svn-hello/builds/5/stop?[args] and
+        # we want to go to: http://localhost:8080/svn-hello
+        r = Redirect("../..")
+        d = defer.Deferred()
+        reactor.callLater(1, d.callback, r)
+        return DeferredResource(d)
+        
+    def getChild(self, path, req):
+        if path == "remove":
+            return self.removeFromQueue(req)
+        else:
+            return HtmlResource.getChild(self, path, req)
+        
\ Kein Zeilenumbruch am Dateiende.
diff -r --unified -N buildbot-0.7.8-orig/buildbot/status/web/waterfall.py buildbot-0.7.8-patch/buildbot/status/web/waterfall.py
--- buildbot-0.7.8-orig/buildbot/status/web/waterfall.py	2008-07-25 01:36:29.000000000 +0200
+++ buildbot-0.7.8-patch/buildbot/status/web/waterfall.py	2008-08-26 12:19:35.000000000 +0200
@@ -129,8 +129,15 @@
         number = b.getNumber()
         url = path_to_build(req, b)
         reason = b.getReason()
-        text = ('<a title="Reason: %s" href="%s">Build %d</a>'
-                % (html.escape(reason), url, number))
+        if reason == None:
+            reason = "No specific reason"
+            
+        branch = b.getProperty('branch')
+        if branch == None:
+            branch = "ERROR: No CWS/MWS provided!"
+            
+        text = ('<a title="Reason: %s | CWS: %s" href="%s">Build %d<br/>CWS/MWS: %s</a>'
+                % (html.escape(reason), html.escape(branch), url, number, html.escape(branch)))
         color = "yellow"
         class_ = "start"
         if b.isFinished() and not b.getSteps():
